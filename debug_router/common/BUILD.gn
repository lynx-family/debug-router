# Copyright 2024 The Lynx Authors. All rights reserved.
# Licensed under the Apache License Version 2.0 that can be found in the
# LICENSE file in the root directory of this source tree.

config("debug_router_private_config") {
  visibility = [ ":*" ]

  configs = [ "//build/config/compiler:rtti" ]

  include_dirs = [
    "../..",
    "../../third_party/jsoncpp/include",
  ]

  cflags_cc = [
    "-Wno-extra-semi",
    "-Wno-unused-private-field",
    "-Wno-reorder-ctor",
    "-Wno-implicit-fallthrough",
    "-Wno-invalid-noreturn",
    "-Wno-potentially-evaluated-expression",
    "-Wno-sign-compare",
    "-Wno-delete-non-abstract-non-virtual-dtor",
  ]

  # FIXME(): definition controlled by the args
  defines = [ "JSON_USE_EXCEPTION=0" ]
}

config("debug_router_config") {
  include_dirs = [ "." ]

  defines = [ "JSON_USE_EXCEPTION=0" ]
}

source_set("debug_router_source") {
  public_configs = [ ":debug_router_config" ]
  configs += [ ":debug_router_private_config" ]

  sources = [
    "../native/base/socket_guard.h",
    "../native/core/debug_router_config.cc",
    "../native/core/debug_router_config.h",
    "../native/core/debug_router_core.cc",
    "../native/core/debug_router_core.h",
    "../native/core/debug_router_global_handler.h",
    "../native/core/debug_router_message_handler.h",
    "../native/core/debug_router_session_handler.h",
    "../native/core/debug_router_state_listener.cc",
    "../native/core/debug_router_state_listener.h",
    "../native/core/message_transceiver.cc",
    "../native/core/message_transceiver.h",
    "../native/core/native_slot.cc",
    "../native/core/native_slot.h",
    "../native/core/util.cc",
    "../native/core/util.h",
    "../native/log/logging.cc",
    "../native/log/logging.h",
    "../native/net/socket_server_client.cc",
    "../native/net/socket_server_client.h",
    "../native/net/websocket_client.cc",
    "../native/net/websocket_client.h",
    "../native/net/websocket_task.cc",
    "../native/net/websocket_task.h",
    "../native/processor/message_assembler.cc",
    "../native/processor/message_assembler.h",
    "../native/processor/message_handler.h",
    "../native/processor/processor.cc",
    "../native/processor/processor.h",
    "../native/protocol/events.h",
    "../native/protocol/md5.cc",
    "../native/protocol/md5.h",
    "../native/protocol/protocol.cc",
    "../native/protocol/protocol.h",
    "../native/socket/blocking_queue.h",
    "../native/socket/count_down_latch.cc",
    "../native/socket/count_down_latch.h",
    "../native/socket/socket_server_api.cc",
    "../native/socket/socket_server_api.h",
    "../native/socket/socket_server_type.h",
    "../native/socket/usb_client.cc",
    "../native/socket/usb_client.h",
    "../native/socket/usb_client_listener.h",
    "../native/socket/work_thread_executor.cc",
    "../native/socket/work_thread_executor.h",
    "../native/thread/debug_router_executor.cc",
    "../native/thread/debug_router_executor.h",
    "debug_router.cc",
    "debug_router.h",
    "debug_router_global_handler.h",
    "debug_router_session_handler.h",
    "debug_router_slot.cc",
    "debug_router_slot.h",
    "debug_router_slot_delegate.h",
    "debug_router_state_listener.h",
    "native_slot_delegate.h",
  ]
  if (is_win) {
    sources += [
      "../native/socket/win/socket_server_win.cc",
      "../native/socket/win/socket_server_win.h",
    ]
  } else {
    sources += [
      "../native/socket/posix/socket_server_posix.cc",
      "../native/socket/posix/socket_server_posix.h",
    ]
  }
}
source_set("debug_router_cpp_interface") {
  include_dirs = [
    ".",
    "../../third_party/jsoncpp/include",
  ]
  sources = [
    "debug_router.cc",
    "debug_router.h",
    "debug_router_global_handler.h",
    "debug_router_session_handler.h",
    "debug_router_slot.cc",
    "debug_router_slot.h",
    "debug_router_slot_delegate.h",
    "debug_router_state_listener.h",
    "native_slot_delegate.h",
  ]
}
